version: '3.1'
services:
    
    # NGINX
    webserver:
        image: 'nginx:alpine'
        restart: always
        working_dir: '{{_config.App.root}}' # /Users/kzarshenas/Sites/CrazyTest
        env_file:
            - './docker/variables.env'
        volumes:
            - '.:{{_config.App.root}}' # '.:/Users/kzarshenas/Sites/CrazyTest'
            - './docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf'
            # If {{_config.App.framework.path}} - './vendor/kzarshenas/crazyphp:/Users/kzarshenas/Sites/CrazyPHP'
        ports:
            - '48000:80'

    # PHP
    php-fpm:
        build: phpdocker/php-fpm
        restart: always
        working_dir: '{{_config.App.root}}' # /Users/kzarshenas/Sites/CrazyTest
        env_file:
            - './docker/variables.env'
        volumes:
            - '.:{{_config.App.root}}' # '.:/Users/kzarshenas/Sites/CrazyTest'
            - './docker/php-fpm/php-ini-overrides.ini:/etc/php/8.1/fpm/conf.d/99-overrides.ini'
            # Dev
            # If {app.framework.path} - './vendor/kzarshenas/crazyphp:/Users/kzarshenas/Sites/CrazyPHP'
            {{#if _config.App.framework.path}}- './vendor/kzarshenas/crazyphp:{{_config.App.framework.path}}'{{/if}}

{{#if _config.Database.collection.mongodb}}
    # MANGO
    mongo:
        image: mongo:6.0
        restart: always
        env_file:
            - './docker/variables.env'
        ports:
            - "27017:{{_config.Database.collection.mongodb.port}}"
        volumes:
            - '~/apps/mongo:{{_config.App.root}}/.mongo'
{{/if}}

    # NODEJS (NPM)
    node:
        image: "node:18"
        user: "node"
        # working_dir: '/Users/kzarshenas/Sites/CrazyTest'
        working_dir: '{{_config.App.root}}'
        environment:
            - NODE_ENV=production
        volumes:
            - '.:{{_config.App.root}}'
        expose:
            - "8081"
        command: "npm update"
