version: '3.1'
services:
    
    {{!-- NGINX --}}
    # NGINX
    webserver:
        image: 'nginx:alpine'
        restart: always
        working_dir: '{{_config.App.root}}' # /Users/kzarshenas/Sites/CrazyTest
        env_file:
            - './docker/variables.env'
        volumes:
            - '.:{{_config.App.root}}' # '.:/Users/kzarshenas/Sites/CrazyTest'
            - './docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf'
            # If {{_config.App.framework.path}} - './vendor/kzarshenas/crazyphp:/Users/kzarshenas/Sites/CrazyPHP'
        ports:
            - '48000:80'

    {{!-- PHP 8 --}}
    # PHP
    php-fpm:
        build: phpdocker/php-fpm
        restart: always
        working_dir: '{{_config.App.root}}' # /Users/kzarshenas/Sites/CrazyTest
        env_file:
            - './docker/variables.env'
        volumes:
            - '.:{{_config.App.root}}' # '.:/Users/kzarshenas/Sites/CrazyTest'
            - './docker/php-fpm/php-ini-overrides.ini:/etc/php/8.1/fpm/conf.d/99-overrides.ini'
            # Dev
            # If {app.framework.path} - './vendor/kzarshenas/crazyphp:/Users/kzarshenas/Sites/CrazyPHP'
            {{#if _config.App.framework.path}}- './vendor/kzarshenas/crazyphp:{{_config.App.framework.path}}'{{/if}}
        environment:
            - PHP_DISPLAY_ERRORS=1

    {{!-- NODE JS --}}
    # NODEJS (NPM)
    node:
        image: "node:18"
        user: "node"
        # working_dir: '/Users/kzarshenas/Sites/CrazyTest'
        working_dir: '{{_config.App.root}}'
        environment:
            - NODE_ENV=production
        volumes:
            - '.:{{_config.App.root}}'
        expose:
            - "8081"
        command: "npm update"

    {{!-- Mongo DB --}}
{{#if _config.Database.collection.mongodb}}
    # MANGO
    mongo:
        image: mongo:6.0
        restart: always
        env_file:
            - './docker/variables.env'
        ports:
            - {{_config.Database.collection.mongodb.port}}:27017
        volumes:
            - '{{_config.App.root}}/.database/mongo:/data/db'
        environment:
            - MONGO_INITDB_DATABASE={{_config.Database.collection.mongodb.database.[0]}}
            - MONGO_INITDB_ROOT_USERNAME={{_config.Database.collection.mongodb.root.login}}
            - MONGO_INITDB_ROOT_PASSWORD={{_config.Database.collection.mongodb.root.password}}
            - MONGODB_CONNSTRING=mongodb://{{_config.Database.collection.mongodb.root.login}}:{{_config.Database.collection.mongodb.root.password}}@mongodb

{{/if}}

    {{!-- MySQL --}}
{{#if _config.Database.collection.mysql}}
    # MYSQL
    mysql:
        image: mysql:8
        restart: always
        ports:
            - {{_config.Database.collection.mysql.port}}:3306
        volumes:
            - '{{_config.App.root}}/.database/mysql:/var/lib/mysql'
        environment:
            - MYSQL_ROOT_PASSWORD={{_config.Database.collection.mysql.root.password}}
            - MYSQL_PASSWORD={{_config.Database.collection.mysql.users.[0].password}}
            - MYSQL_USER={{_config.Database.collection.mysql.users.[0].login}}
            - MYSQL_DATABASE={{_config.Database.collection.mysql.database.[0]}}
{{/if}}

    {{!-- MariaDB --}}
{{#if _config.Database.collection.mariadb}}
    # MARIADB
    mariadb:
        image: 'mariadb:10.3'
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD={{_config.Database.collection.mariadb.root.password}}
            - MYSQL_PASSWORD={{_config.Database.collection.mariadb.users.[0].password}}
            - MYSQL_USER={{_config.Database.collection.mariadb.users.[0].login}}
            - MYSQL_DATABASE={{_config.Database.collection.mariadb.database.[0]}}
        ports:
           - {{_config.Database.collection.mysql.port}}:3306
        volumes:
            - '{{_config.App.root}}/.database/mariadb:/var/lib/mysql'
{{/if}}

    {{!-- PostgreSQL --}}
{{#if _config.Database.collection.postgresql}}
    # POSTGRESQL
    postgresql:
        image: postgres:14.1-alpine
        restart: always
        environment:
            - POSTGRES_USER={{_config.Database.collection.postgresql.users.[0].login}}
            - POSTGRES_PASSWORD={{_config.Database.collection.postgresql.users.[0].password}}
            - POSTGRES_DB={{_config.Database.collection.postgresql.database.[0]}}
        ports:
            - {{_config.Database.collection.postgresql.port}}:5432
        volumes: 
            - '{{_config.App.root}}/.database/postgresql:/var/lib/postgresql/data'
{{/if}}
